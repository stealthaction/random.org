from playwright.sync_api import Page


class MainPageSelectors:
    INPUT_MIN_NUMBER = "//input[contains(@id, 'min')]"
    INPUT_MAX_NUMBER = "//input[contains(@id, 'max')]"
    GENERATING_NUM = (
        "//span[contains(@id, 'result')]//span[contains(@style, 'font-weight:bold')]"
    )
    FRAME_LOCATOR = 'internal:text=\"The numbers generated by this\"i'


class MainPage:
    def __init__(self, page: Page):
        self.page = page
        self.selectors = MainPageSelectors

    def open_page(self, url: str) -> None:
        self.page.goto(url)

    def fill_min_number(self, num: str) -> None:
        self.page.frame_locator(self.selectors.FRAME_LOCATOR).locator(self.selectors.INPUT_MIN_NUMBER).fill(num)

    def fill_max_number(self, num: str) -> None:
        self.page.frame_locator(self.selectors.FRAME_LOCATOR).locator(self.selectors.INPUT_MAX_NUMBER).fill(num)

    def click_button_generate(self) -> None:
        self.page.frame_locator(self.selectors.FRAME_LOCATOR).get_by_role("button", name="Generate").click()

    def generate_number(self, min_number: str, max_number: str) -> None:
        self.fill_min_number(min_number)
        self.fill_max_number(max_number)

    def assert_result(self, min: str, max: str) -> None:
        result = self.page.frame_locator(self.selectors.FRAME_LOCATOR).locator(self.selectors.GENERATING_NUM).inner_text()
        min_number = int(min)
        max_number = int(max)
        assert (
            int(result) in range(min_number, max_number+1)
        ), f"Сгенерированное значение {result} не находится в диапазоне {min_number}-{max_number}"
